@page "/farm/{blnNumber}"
@using System.Text.Json;
@attribute [Authorize]
@inject HttpClient httpClient

<style>
    td, th {
        padding: 10px;
    }

    h3 {
        padding: 10px;
        text-decoration: none;
        font-weight: bolder;
        color: darkmagenta;
    }

    .flex-container {
        display: flex;
        height: 100%;
        padding: 10px;
        gap: 10px;
    }

        .flex-container > div {
            border: 4px solid black;
            border-radius: 10px;
            padding: 10px;
        }

    .item1 {
        flex-grow: 1;
        flex-basis: 80%;
    }

    .item2 {
        flex-basis: 20%;
    }

    .item3 {
        flex-basis: 33%;
    }

    .item4 {
        flex-basis: 66%;
    }

    .item5 {
        flex-grow: 1;
        flex-basis: 100%;
    }
</style>

<body>
    <div class="flex-container">
        <div class="item1">
            <h3>@farm.BlnNumber @farm.Name</h3>
        </div>
        <div class="item2">
            <table>
                <tr>
                    <th>PremiseId</th>
                    <td>@farm.PremiseID</td>
                </tr>
                <tr>
                    <th>Capacity</th>
                    <td>@farm.Capacity</td>
                </tr>
            </table>
        </div>
    </div>
    <div class="flex-container">
        <div class="item3">
            <h3>Address</h3>
            <table>
                <tr>
                    <th>Street</th>
                    <td>@address.Street</td>
                </tr>
                <tr>
                    <th>StreetNumber</th>
                    <td>@address.StreetNumber</td>
                </tr>
                <tr>
                    <th>City</th>
                    <td>@address.City</td>
                </tr>
                <tr>
                    <th>PostalCode</th>
                    <td>@address.PostalCode</td>
                </tr>
                <tr>
                    <th>State</th>
                    <td>@address.State</td>
                </tr>
                <tr>
                    <th>CountryName</th>
                    <td>@country.Name</td>
                </tr>
            </table>
        </div>
        <div class="item3">
            <h3>Production type</h3>
            <table>
                @foreach (var productionType in productionTypes)
                {
                    <tr>
                        <td>@productionType.Name</td>
                    </tr>
                }
            </table>
        </div>
        <div class="item3">
            <h3>Disease status</h3>
            <table>
                @foreach (var diseaseStatuse in diseaseStatuses)
                {

                    <tr>
                        <td>@diseaseStatuse.Disease</td>
                        <td>@diseaseStatuse.Status</td>
                    </tr>
                }
            </table>
        </div>
    </div>
    <div class="flex-container">
        <div class="item5">
            <h3>Sources</h3>
            <table>
                @foreach (var source in sources)
                {
                    <tr>
                        <td><b>@source.Category</b></td>
                        <td>@source.Description</td>
                    </tr>
                }
            </table>
        </div>
    </div>
    <div class="flex-container">
        <div class="item3">
            <h3>Vaccination Protocol</h3>
            <h3>Deworming Protocol</h3>
            <h3><b>Health report</b></h3>
        </div>
        <div class="item4">
            <h3>Background information</h3>
            <table>
                <tr>
                    <th>Description</th>
                    <td>@farm.Description</td>
                </tr>
                <tr>
                    <th>History</th>
                    <td>@farm.History</td>
                </tr>
            </table>
        </div>
    </div>
</body>

@code {
    [Parameter]
    public string BlnNumber { get; set; }
    private FarmDto farm = new FarmDto();
    private AddressDto address = new AddressDto();
    private CountryDto country = new CountryDto();
    private IEnumerable<ProductionTypeDto> productionTypes = new List<ProductionTypeDto>();
    private IEnumerable<DiseaseStatusDto> diseaseStatuses = new List<DiseaseStatusDto>();
    private IEnumerable<SourceDto> sources = new List<SourceDto>();

    protected override async Task OnInitializedAsync()
    {
        farm = await httpClient.GetFromJsonAsync<FarmDto>($"https://localhost:7246/api/Farms/{BlnNumber}");
        address = farm.Address;
        country = farm.Country;
        productionTypes = farm.ProductionTypes;
        diseaseStatuses = farm.DiseaseStatuses;
        sources = farm.Sources;
        await base.OnInitializedAsync();
    }
}
