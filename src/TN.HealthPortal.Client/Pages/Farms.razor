@page "/farms"
@using System.Text.Json;
@attribute [Authorize]
@inject IHttpClientFactory httpClientFactory
@inject IConfiguration configuration;

<style>
    td, th, h3 {
        padding: 10px;
    }

    .myStyle {
        border: 2px solid black;
        margin: 2px;
    }

    table {
        width: 100%;
    }

    td {
        text-align: left;
        vertical-align: top;
        max-width: 250px;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }

    .magentaBold {
        text-decoration: none;
        font-weight: bolder;
        color: darkmagenta;
    }
 </style>

<div class="myStyle">
<h3>Farms</h3>
    <table>
        <tr>
            <th>BlnNumber</th>
            <th>Name</th>
            <th>PremiseId</th>
            <th>CountryName</th>
            <th>Capacity</th>
            <th>Description</th>
            <th>History</th>
        </tr>
    @foreach(var farm in farms)
        {
        <tr>
            <td>
              <a href="/farm/@farm.BlnNumber" class="magentaBold">@farm.BlnNumber</a>
            </td>
            <td>@farm.Name</td>
            <td>@farm.PremiseID</td>
            <td>@farm.Country.Name</td>
            <td>@farm.Capacity</td>
            <td>@farm.Description</td>
            <td>@farm.History</td>
        </tr>
    }
    </table>
</div>

@code {
    private IEnumerable<FarmDto> farms = new List<FarmDto>();

    protected override async Task OnInitializedAsync()
    {
        var httpClient = httpClientFactory.CreateClient("Api");
        farms = await httpClient.GetFromJsonAsync<IEnumerable<FarmDto>>($"{configuration["Api:BaseUrl"]}/Farms");
        await base.OnInitializedAsync();
    }
}